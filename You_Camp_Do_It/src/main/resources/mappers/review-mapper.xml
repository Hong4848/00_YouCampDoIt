<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="reviewMapper">
  
  <resultMap id="reviewResultMap" type="review">
  	<id column="REVIEW_NO" property="reviewNo" />
  	<result column="REVIEW_TITLE" property="reviewTitle" />
  	<result column="REVIEW_CONTENT" property="reviewContent" />
  	<result column="REVIEW_COUNT" property="reviewCount" />
  	<result column="CREATE_DATE" property="createDate" />
  	<result column="REVIEW_WRITER" property="reviewWriter" />
  	<result column="MAINIMAGE" property="mainImage" />
  	<result column="MEMBER_NO" property="memberNo" />
  </resultMap>
  	
 	<resultMap id="reviewAttachments" type="reviewAttachment">
	   	<result column="FILE_NO" property="fileNo" />
	  	<result column="ORIGIN_NAME" property="originName" />
	  	<result column="CHANGE_NAME" property="changeName" />
	  	<result column="FILE_PATH" property="filePath" />
	  	<result column="UPLOAD_DATE" property="uploadDate" />
	  	<result column="FILE_LEVEL" property="fileLevel" />
	  	<result column="REVIEW_NO" property="reviewNo" /> 
   </resultMap>
   
   <resultMap id="replyResultSet" type="reviewReply">
   	<id column="REPLY_NO" property="replyNo" />
   	<result column="REPLY_CONTENT" property="replyContent" />
   	<result column="REPLY_WRITER" property="replyWriter" />
   	<result column="CREATE_DATE" property="createDate" />
   	<result column="MEMBER_NO" property="memberNo" />
   	<result column="REVIEW_NO" property="reviewNo" />
   </resultMap>
  
  

  
   <select id="selectCount" resultType="_int">
        SELECT COUNT(*)
        FROM REVIEW
    </select>
    
    <!-- 목록조회 -->
    <select id="selectReviewList" resultMap="reviewResultMap">
	    SELECT R.REVIEW_NO
		      , TO_CHAR(CREATE_DATE, 'YYYY.MM.DD') AS "CREATE_DATE"
		      , REVIEW_TITLE
		      , CHANGE_NAME AS "MAINIMAGE"
		  FROM REVIEW R
		  JOIN REVIEW_ATTACHMENT A ON (R.REVIEW_NO = A.REVIEW_NO)
		 WHERE R.STATUS = 'Y'
		   AND FILE_LEVEL = 1
		 ORDER BY REVIEW_NO DESC
	</select>
    
    <!-- 이벤트 게시글 등록 -->
    <insert id="insertReview" parameterType="review">
	    <selectKey keyProperty="reviewNo" resultType="int" order="BEFORE">
	        SELECT REVIEW_SEQ.NEXTVAL FROM DUAL
	    </selectKey>
	    INSERT INTO REVIEW (
	        REVIEW_NO,
	        REVIEW_TITLE,
	        REVIEW_CONTENT,
	        CREATE_DATE,
	        MEMBER_NO,
	        REVIEW_WRITER
	    ) VALUES (
	        #{reviewNo},
	        #{reviewTitle},
	        #{reviewContent},
	        SYSDATE,
	        #{memberNo},
	        #{reviewWriter}
	    )
	</insert>
    
    <!-- 이벤트 게시글 첨부파일 등록 -->
    <insert id="insertReviewAttachment" parameterType="reviewAttachment">
        INSERT INTO REVIEW_ATTACHMENT (
        	FILE_NO,
            ORIGIN_NAME,
            CHANGE_NAME,
            FILE_PATH,
            UPLOAD_DATE,
            FILE_LEVEL,
            STATUS,
            REVIEW_NO
        ) VALUES (
        	FILE_SEQ.NEXTVAL,
            #{originName},
            #{changeName},
            #{filePath},
            SYSDATE,
            #{fileLevel},
            'Y',
            #{reviewNo}
        )
    </insert>
  

	<!-- 상세조회 쿼리문 -->
	<select id="selectReview" parameterType="_int" resultMap="reviewResultMap">
		SELECT REVIEW_NO
		     , TO_CHAR(CREATE_DATE, 'YYYY.MM.DD') AS "CREATE_DATE"
		     , REVIEW_TITLE
		     , REVIEW_CONTENT
		     , MEMBER_ID AS "REVIEW_WRITER"
		  FROM REVIEW R
		  JOIN MEMBER M ON (R.MEMBER_NO = M.MEMBER_NO)
		 WHERE REVIEW_NO = #{reviewNo}
		   AND R.STATUS = 'Y'
	</select>
	
	<select id="selectReviewAttachment" resultMap="reviewAttachments">
		SELECT FILE_NO
		     , ORIGIN_NAME
		     , CHANGE_NAME
		     , FILE_PATH
		     , FILE_LEVEL
		  FROM REVIEW_ATTACHMENT
		 WHERE REVIEW_NO = #{reviewNo}
		   AND STATUS = 'Y'
		 ORDER BY FILE_LEVEL ASC
	</select>
	
	<!-- 수정하기 쿼리문 -->
	<update id="updateReview" parameterType="review">
	    UPDATE REVIEW
	    SET REVIEW_TITLE = #{reviewTitle}
	      , REVIEW_CONTENT = #{reviewContent}
	      , CREATE_DATE = SYSDATE
	    WHERE REVIEW_NO = #{reviewNo}
	      AND STATUS = 'Y'
	</update>
	
	<update id="updateReviewAttachment" parameterType="reviewAttachment">
	     UPDATE REVIEW_ATTACHMENT
		    SET ORIGIN_NAME = #{originName}
		      , CHANGE_NAME = #{changeName}
		      , FILE_PATH = #{filePath}
		      , UPLOAD_DATE = SYSDATE
		 WHERE FILE_NO = #{fileNo}
		   AND STATUS = 'Y'
	</update>
	
	<update id="deleteReviewAttachment" parameterType="int">
	    UPDATE REVIEW_ATTACHMENT
	       SET STATUS = 'N'
	     WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	
	<!-- 삭제하기 쿼리문 -->
	<update id="deleteReview" parameterType="_int">
	    UPDATE REVIEW
	    SET STATUS = 'N'
	    WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	<!-- 댓글 리스트 조회 쿼리문 -->
	<select id="selectReplyList" parameterType="_int" resultMap="replyResultSet">
        SELECT REPLY_NO
             , REPLY_WRITER
             , REPLY_CONTENT
             , TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE"
          FROM REVIEWREPLY
         WHERE REVIEW_NO = #{reviewNo}
           AND STATUS = 'Y'
         ORDER BY REPLY_NO DESC
    </select>
		
	<!-- 댓글 작성 쿼리문 -->
	<insert id="insertReply" parameterType="reviewReply">
        INSERT INTO REVIEWREPLY(REPLY_NO
                              , REPLY_CONTENT
                              , REVIEW_NO
                              , REPLY_WRITER)
                         VALUES(REPLY_SEQ.NEXTVAL
                              , #{replyContent}
                              , #{reviewNo}
                              , #{replyWriter})
    </insert>
	
</mapper>
