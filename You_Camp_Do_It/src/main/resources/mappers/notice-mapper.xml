<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="noticeMapper">

	<!-- NOTICE 테이블로부터 조회된 ResultSet 을 Notice VO 타입으로 옮겨주는 ResultMap -->
	<resultMap id="noticeResultSet" type="notice">
		<id column="NOTICE_NO" property="noticeNo" />
		<result column="NOTICE_TITLE" property="noticeTitle" />
		<result column="COUNT" property="count" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="ORIGIN_NAME" property="originName" />
		<result column="NOTICE_CONTENT" property="noticeContent" />
		<result column="CHANGE_NAME" property="changeName" />	
	</resultMap>
	
	<!-- 공지사항 게시글 갯수 조회용 쿼리문 -->
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM NOTICE
		 WHERE STATUS = 'Y'	
	</select>
	
	<!-- 공지사항 목록조회 쿼리문  -->
	<select id="selectList" resultMap="noticeResultSet">
		SELECT NOTICE_NO
		     , NOTICE_TITLE
		     , COUNT
		     , TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE"
		     , ORIGIN_NAME
		  FROM NOTICE
		 WHERE STATUS = 'Y'
		 ORDER BY NOTICE_NO DESC
	</select>
	
	<!-- 공지사항 상세조회용 쿼리문 -->
	<!-- 1. 게시글 조회수증가용 쿼리문 -->
	<update id="increaseCount" parameterType="_int">
		UPDATE NOTICE
		   SET COUNT = COUNT + 1
		 WHERE NOTICE_NO = #{noticeNo}
		   AND STATUS = 'Y'
	</update>
	
	<!-- 2. 상세조회 쿼리문 -->
	<select id="selectNotice" parameterType="_int" resultMap="noticeResultSet">
		SELECT NOTICE_NO
		     , NOTICE_TITLE
		     , NOTICE_CONTENT
		     , ORIGIN_NAME
		     , CHANGE_NAME
		     , TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE"
		  FROM NOTICE
		 WHERE NOTICE_NO = #{noticeNo}
		   AND STATUS = 'Y'
	</select>
	

	<!-- 이전글 가져오기 -->
    <select id="getPreviousNotice" parameterType="int" resultMap="noticeResultSet">
        SELECT *
        FROM (
            SELECT *
            FROM NOTICE
            WHERE NOTICE_NO &lt; #{noticeNo}
              AND STATUS = 'Y'
            ORDER BY NOTICE_NO DESC
        )
        WHERE ROWNUM = 1
    </select>
  
    <!-- 다음글 가져오기 -->
    <select id="getNextNotice" parameterType="int" resultMap="noticeResultSet">
        SELECT *
        FROM (
            SELECT *
            FROM NOTICE
            WHERE NOTICE_NO &gt; #{noticeNo}
              AND STATUS = 'Y'
            ORDER BY NOTICE_NO ASC
        )
        WHERE ROWNUM = 1
    </select>
    
    <!-- 모든 공지사항 번호 가져오기 -->
    <select id="getAllNoticeNumbers" resultType="int">
        SELECT NOTICE_NO
        FROM NOTICE
        ORDER BY NOTICE_NO DESC
    </select>
    
    <!-- 공지사항 작성 쿼리문 -->
    <insert id="insertNotice" parameterType="notice">
    	INSERT INTO NOTICE(NOTICE_NO
    					 , NOTICE_TITLE
    					 , NOTICE_CONTENT
    					 , ORIGIN_NAME
    					 , CHANGE_NAME)
    				VALUES(NOTICE_SEQ.NEXTVAL
    					 , #{noticeTitle}
    					 , #{noticeContent}
    					 , #{originName}
    					 , #{changeName})
    </insert>
    
    <!-- 공지사항 삭제하기 쿼리문 -->
    <update id="deleteNotice" parameterType="_int">
    	UPDATE NOTICE
    	   SET STATUS = 'N'
    	WHERE NOTICE_NO = #{noticeNo}
    </update>
  
  	<!-- 공지사항 수정하기 쿼리문 -->
	<update id="updateNotice" parameterType="notice">
	    UPDATE NOTICE
	    SET NOTICE_TITLE = #{noticeTitle}
	      , NOTICE_CONTENT = #{noticeContent}
	      <if test="originName != null and originName != ''">
	      , ORIGIN_NAME = #{originName}
	      , CHANGE_NAME = #{changeName}
	      </if>
	    WHERE NOTICE_NO = #{noticeNo}
	    <!-- STATUS 조건 제거 -->
	</update>
	
</mapper>
